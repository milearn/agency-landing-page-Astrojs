---
export interface Props {
  id: string;
}

import Info from "../cards/Info.astro";
import Button from "./Button.astro";
import Paragraph from "./Paragraph.astro";
const { id } = Astro.props;
---

<div class="flex sm:flex-row flex-col gap-5 w-full justify-center relative">
  <form
    id={id}
    action="#"
    class="get_started_form py-1 pl-6 w-full pr-1 flex gap-3 items-center text-heading-3 shadow-lg shadow-box-shadow
                border border-box-border bg-box-bg rounded-full ease-linear focus-within:bg-body focus-within:border-primary"
  >
    <span class="min-w-max pr-2 border-r border-box-border">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24px"
        height="24px"
        viewBox="0 0 24 24"
        fill="none"
      >
        <path
          d="M21.97 18.33C21.97 18.69 21.89 19.06 21.72 19.42C21.55 19.78 21.33 20.12 21.04 20.44C20.55 20.98 20.01 21.37 19.4 21.62C18.8 21.87 18.15 22 17.45 22C16.43 22 15.34 21.76 14.19 21.27C13.04 20.78 11.89 20.12 10.75 19.29C9.6 18.45 8.51 17.52 7.47 16.49C6.44 15.45 5.51 14.36 4.68 13.22C3.86 12.08 3.2 10.94 2.72 9.81C2.24 8.67 2 7.58 2 6.54C2 5.86 2.12 5.21 2.36 4.61C2.6 4 2.98 3.44 3.51 2.94C4.15 2.31 4.85 2 5.59 2C5.87 2 6.15 2.06 6.4 2.18C6.66 2.3 6.89 2.48 7.07 2.74L9.39 6.01C9.57 6.26 9.7 6.49 9.79 6.71C9.88 6.92 9.93 7.13 9.93 7.32C9.93 7.56 9.86 7.8 9.72 8.03C9.59 8.26 9.4 8.5 9.16 8.74L8.4 9.53C8.29 9.64 8.24 9.77 8.24 9.93C8.24 10.01 8.25 10.08 8.27 10.16C8.3 10.24 8.33 10.3 8.35 10.36C8.53 10.69 8.84 11.12 9.28 11.64C9.73 12.16 10.21 12.69 10.73 13.22C11.27 13.75 11.79 14.24 12.32 14.69C12.84 15.13 13.27 15.43 13.61 15.61C13.66 15.63 13.72 15.66 13.79 15.69C13.87 15.72 13.95 15.73 14.04 15.73C14.21 15.73 14.34 15.67 14.45 15.56L15.21 14.81C15.46 14.56 15.7 14.37 15.93 14.25C16.16 14.11 16.39 14.04 16.64 14.04C16.83 14.04 17.03 14.08 17.25 14.17C17.47 14.26 17.7 14.39 17.95 14.56L21.26 16.91C21.52 17.09 21.7 17.3 21.81 17.55C21.91 17.8 21.97 18.05 21.97 18.33Z"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-miterlimit="10"></path>
      </svg>
    </span>
    <input
      name=""
      autocomplete="email mobile"
      placeholder="Email or Phone"
      class="w-full py-3 outline-none bg-transparent contact_details"
    />

    <input type="submit" hidden />
    <Button
      id="get_started_button"
      variant={"primary"}
      className={"min-w-max text-white "}
    >
      <span class="hidden sm:flex relative z-[5]"> Get Started</span>
      <span class="flex sm:hidden relative z-[5]">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-5 h-5"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"
          ></path>
        </svg>
      </span>
    </Button>
    <span
      class="hidden input_error text-sm font-thin text-[#ff6969] absolute -bottom-7 animate-fade-in"
    >
      Something went wrong. Please try Again.
    </span>
  </form>

  <Paragraph
    className="hidden thanks_reponse text-center animate-fade-in	px-7 py-4 bg-slate-300/10 drop-shadow-2xl rounded-2xl	"
  >
    <span class="text-lg md:text-xl font-semibold text-heading-2">
      Thanks for your resposne !
    </span><br />
     Our team will get back to you shortly
  </Paragraph>
</div>

<script define:vars={{ id }} is:inline>
const addEntry = (detail) =>
  fetch(
    "https://script.google.com/macros/s/AKfycbxO_w5TQqow3TzF5y7TK0yGarRkP43412LeZyywYP7GCssD3M6De8o0CRpzF5U_6NXb/exec",
    {
      redirect: "follow",
      method: "POST",
      body: `Contact=${detail}&Time=${new Date().toString()}`,
      headers: {
        "Content-Type": "text/plain;charset=utf-8",
      },
    }
  );
const regex = new RegExp(
  `(^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$)|(^[0-9]{10}$)`
);

const form = document.getElementById(id);

const inputElm = form.querySelector(".contact_details");
const btnElm = form.querySelector("#get_started_button");
const errorTextElm = form.querySelector(".input_error");

form?.addEventListener("keydown", (event) => {
  errorTextElm.classList.add("hidden");
  errorTextElm.innerHTML = "";
});

form?.addEventListener("submit", (event) => {
  event.preventDefault();

  const contactValue = inputElm.value;

  if (!regex.test(inputElm.value)) {
    errorTextElm.classList.remove("hidden");
    errorTextElm.innerHTML =
      "Please enter valid email or 10 digit mobile number.";
    return;
  }

  inputElm.setAttribute("disabled", "true");
  btnElm.setAttribute("disabled", "true");

  document.querySelectorAll(".get_started_form").forEach((elm) => {
    elm.classList.add("motion-safe:animate-pulse", "cursor-not-allowed");
  });

  addEntry(contactValue)
    .then(() => {
      errorTextElm.classList.add("hidden");
      document.querySelectorAll(".get_started_form").forEach((elm) => {
        elm.classList.add("hidden");
      });
      document.querySelectorAll(".thanks_reponse").forEach((elm) => {
        elm.classList.remove("hidden");
      });
    })
    .catch(() => {
      errorTextElm.classList.remove("hidden");
      errorTextElm.innerHTML = "Something went wrong. Please try Again.";
    })
    .finally(() => {
      inputElm.setAttribute("disabled", "false");
      btnElm.setAttribute("disabled", "false");

      document.querySelectorAll(".get_started_form").forEach((elm) => {
        elm.classList.remove(
          "motion-safe:animate-pulse",
          "cursor-not-allowed"
        );
      });
    });
});
</script>
